@model kioscov1.Models.Entities.Venta
@using System.Security.Claims;

@{
    ViewData["Title"] = "Create";
}
<h1 class="bi bi-currency-dollar me-2">Nueva Venta</h1>
<hr />

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow-sm">
            <div class="card-header bg-black text-white">
                <strong>Cargar Productos</strong>
            </div>

            <div class="card-body">
                <div class="mb-3">
                    <label for="codigoBarras" class="form-label">Ingrese Código de Barra</label>
                    <input type="text" class="form-control" id="codigoBarras" autofocus />
                </div>

                <div class="row g-3 align-items-end">
                    <div class="col-md-6">
                        <label for="productoSelect" class="form-label">Producto</label>
                        <select id="productoSelect" class="form-select">
                            <option value="">-- Seleccione un producto --</option>
                            @foreach (var producto in ViewBag.Productos)
                            {
                                <option value="@producto.Id" data-precio="@producto.Precio" data-nombre="@producto.Nombre">@producto.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label for="txtcantidad" class="form-label">Cantidad</label>
                        <input type="text" id="txtcantidad" class="form-control" value="1" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="TipoPago" class="form-label">Tipo de Pago</label>
                        <select asp-for="TipoPago" class="form-select" asp-items="Html.GetEnumSelectList<kioscov1.Models.Enums.TipoPago>()">
                            <option value="">-- Seleccione Tipo de Pago --</option>
                        </select>
                        <span asp-validation-for="TipoPago" class="text-danger"></span>
                    </div>


                    <div class="col-md-3 d-grid gap-2">
                        <button class="btn btn-success" id="btnAgregar">Agregar</button>
                        <button class="btn btn-primary" id="btnTerminar">Terminar</button>
                    </div>
                </div>
                <div class="text-end mt-3">
                    <h5><strong>Total: $<span id="totalGeneral">0.00</span></strong></h5>
                </div>

                <hr class="my-4" />

                <div class="table-responsive">
                    <table class="table table-bordered table-hover table-sm" id="tbProducto">
                        <thead class="table-dark text-center">
                            <tr>
                                <th>Código</th>
                                <th>Producto</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                                <th>Total</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Productos agregados -->
                        </tbody>
                    </table>
                </div>


            </div>
        </div>

        <div class="mt-3 text-end">
            <a asp-action="Index" class="btn btn-outline-secondary">Volver al listado</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const productos = @Html.Raw(Json.Serialize(ViewBag.Productos))
        console.log(productos);

         $(document).ready(function () {
            $('#productoSelect').select2({
                placeholder: "Buscar producto...",
                allowClear: true
            });
        });

        $("#btnAgregar").on("click",function(){


            var total  = parseFloat( $("#productoSelect").find(":selected").data("precio")) * parseFloat(  $("#txtcantidad").val() )


            $("#tbProducto tbody").append(

                $("<tr>").append(


                    $("<td>").text($("#productoSelect").val()),
                    $("<td>").text($("#productoSelect").find(":selected").data("nombre")),
                    $("<td>").addClass("cantidad").text($("#txtcantidad").val()),
                    $("<td>").text($("#productoSelect").find(":selected").data("precio")),
                    $("<td>").addClass("total").text(total),
                    $("<td>").append(
                                $('<button class="btn btn-sm btn-warning btnEditar me-1"> Editar </button>'),
                                $('<button class="btn btn-sm btn-danger btnEliminar">Eliminar </button>')
                            )
                )

            )
            console.log("Salud!")
            $("#txtproducto").val("")
            $("#txtprecio").val("")
            $("#txtcantidad").val("1")
            $("#txtproducto").focus();
            actualizarTotalGeneral();
        })

        $("#codigoBarras").on("keypress", function(e){
            if(e.which == 13){
                var codigo = $(this).val().trim();
                const producto = productos.find(p => p.codigoBarra === codigo);

                if (producto) {
                    var cantidad = parseInt($("#txtcantidad").val());
                    const total = cantidad * producto.precio;

                    $("#tbProducto tbody").append(
                        $("<tr>").append(
                            $("<td>").text(producto.id),
                            $("<td>").text(producto.nombre),
                            $("<td>").addClass("cantidad").text(cantidad),
                            $("<td>").text(producto.precio),
                            $("<td>").addClass("total").text(total),
                            $("<td>").append(
                                $('<button class="btn btn-sm btn-warning btnEditar me-1"> Editar </button>'),
                                $('<button class="btn btn-sm btn-danger btnEliminar">Eliminar </button>')
                            )
                        )
                    );

                    $("#txtcantidad").val("1");
                    $(this).val("").focus();
                    actualizarTotalGeneral();

                } else {
                    alert("Producto no encontrado");
                    $("#txtcantidad").val("1");
                    $(this).val("").focus();
                }
            }

        })

        $("#btnTerminar").on("click", function(){
            var oDetalle = [];
            var total = 0;var fechan = new Date();
            fechan = new Date(fechan.getTime() - (fechan.getTimezoneOffset() * 60000));
            var fechanLocal = fechan.toISOString();


            $("#tbProducto > tbody > tr").each(function(i, tr){
                oDetalle.push({
                    productoId: parseInt($(tr).find('td:eq(0)').text()),
                    cantidad: parseInt($(tr).find('td:eq(2)').text()),
                    precioUnitario: parseFloat($(tr).find('td:eq(3)').text()),
                    precioTotal: parseFloat($(tr).find('td:eq(4)').text())

                })
                total = total + parseFloat($(tr).find('td:eq(4)').text());
            })


            var oVentaVM = {
                Venta:{
                    fecha: fechanLocal,
                    usuarioId: parseInt('@User.FindFirst(ClaimTypes.NameIdentifier)?.Value'),
                    importe: total,
                    tipoPago: parseInt($("#TipoPago").val()),
                },
                Detalles: oDetalle.map(d => ({
                    ProductoId: d.productoId,
                    Cantidad: d.cantidad,
                    PrecioUnitario: d.precioUnitario,
                    PrecioTotal: d.precioTotal
                }))
            };

            console.log(oVentaVM);

            $.ajax({
                url:  '@Url.Action("Create", "Ventas1")',
                type: "POST",
                data: JSON.stringify(oVentaVM),
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                 success: function(data){
                        alert(data.message);
                        location.reload();
                 },
                 error: function(xhr, status, error){
                        alert("Error al registrar la venta: " + xhr.responseText);
                  }
            });
         });

         $("#tbProducto").on("click", ".btnEliminar", function(){
                 $(this).closest("tr").remove();
                 actualizarTotalGeneral();
          });

          $("#tbProducto").on("click", ".btnEditar", function () {
                const $row = $(this).closest("tr");
                const cantidadActual = parseInt($row.find(".cantidad").text());
                const nuevaCantidad = prompt("Editar cantidad:", cantidadActual);

                if (nuevaCantidad !== null && !isNaN(nuevaCantidad) && parseInt(nuevaCantidad) > 0) {
                    const precio = parseFloat($row.find("td:eq(3)").text());
                    const total = parseInt(nuevaCantidad) * precio;

                    $row.find(".cantidad").text(nuevaCantidad);
                    $row.find(".total").text(total.toFixed(2));
                    actualizarTotalGeneral();
                }
           });

            function actualizarTotalGeneral() {
                var total = 0;
                $("#tbProducto > tbody > tr").each(function () {
                    const precioTotal = parseFloat($(this).find(".total").text());
                    if (!isNaN(precioTotal)) {
                        total += precioTotal;
                    }
                });

                $("#totalGeneral").text(total.toFixed(2));
            }

    </script>
}
