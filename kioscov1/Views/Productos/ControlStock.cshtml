@model IEnumerable<kioscov1.Models.Entities.Producto>
@{
    ViewData["Title"] = "Control de Stock";
}

<h1>@ViewData["Title"]</h1>

<div class="mb-3 row">
        <label for="filtroTabla" class="col-form-label col-sm-2">Buscar Producto: </label>
        <div>
            <input type="text" class="form-control" id="filtroTabla" placeholder="Ej: Gaseosa o Chocolate"/>
        </div>
</div>

<button id="scrollToBottom" class="btn btn-primary rounded-circle shadow"
        style="position: fixed; bottom: 20px; right: 20px; z-index: 1000; width: 50px; height: 50px;">
    ⬇
</button>

<table class="table table-bordered" id="tableStock">
    <thead class="table-dark">
        <tr>
            <th>Codigo</th>
            <th>Nombre</th>
            <th>Stock</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in Model) {

            <tr data-id="@p.Id">
                <td>@p.CodigoBarra</td>
                <td>@p.Nombre</td>
                <td>
                    <input 
                        type="number" 
                        class="form-control stock-input"
                        value="@p.Stock" 
                        data-original="@p.Stock" 
                        style="appearance: textfield;" />
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-success" id="btnGuardarStock">Guardar cambios</button>
<div id="spinner" class="mt-2" style="display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Guardando...</span>
    </div>
    <span class="ms-2">Guardando cambios...</span>
</div>
<button class="btn btn-danger" id="cancelar">Cancelar</button>

@section Scripts {
    <script>
        $("#btnGuardarStock").on("click", function () {
            $("#spinner").show();
            $("#btnGuardarStock").prop("disabled", true);
            let productosActualizados = [];
            $("#tableStock tbody tr").each(function(){
                const id = $(this).data("id");
                const input = $(this).find(".stock-input");
                const stockNvo = parseInt(input.val());
                const stockOrig = parseInt(input.data("original"));

                if(stockNvo !== stockOrig){
                    productosActualizados.push({
                        Id: id,
                        Stock: stockNvo
                    });
                }
            });
  
            console.log(productosActualizados);
            $.ajax({
                url:'/Productos/ActualizarStock',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(productosActualizados),
                success: function(){
                    alert("Productos actualizados correctamente.");
                    window.location.href = '/Productos/Index';
                },
                error: function(){
                    alert("Error al guardar el stock.");
                },
                complete: function() {
                    $("#spinner").hide();
                    $("#btnGuardarStock").prop("disabled", false);
                }
            });
        });

        $("#cancelar").on("click", function(){
            $(".stock-input").each(function () {
                    const original = $(this).data("original");
                    $(this).val(original);
                });

                $("#spinner").hide();
                $("#btnGuardarStock").prop("disabled", false);
         });

         $("#filtroTabla").on("keyup", function() {
             const text= $(this).val().toLowerCase();
             $("#tableStock tbody tr").filter(function () {
                 $(this).toggle($(this).text().toLowerCase().indexOf(text) > -1);
             });
         });

         $("#scrollToBottom").on("click", function () {
            window.scrollTo({ top: document.body.scrollHeight, behavior: "smooth" });
        });
    </script>
}



