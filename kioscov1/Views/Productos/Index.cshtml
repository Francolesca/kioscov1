@model Paginacion<kioscov1.Models.Entities.Producto>

@{
    ViewData["Title"] = "Productos";
}

<div class="container my-4">
    <h2 class="mb-4">
        <i class="bi bi-box-seam me-2"></i>@ViewData["Title"]
    </h2>

    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
        <a class="btn btn-success" asp-controller="Productos" asp-action="Create">
            <i class="bi bi-plus-circle"></i> Crear Nuevo
        </a>
        <div class="btn-group btn-group-sm" role="group" aria-label="Exportar e importar">
            <a class="btn btn-outline-secondary" asp-controller="Productos" asp-action="Importar">
                <i class="bi bi-file-earmark-arrow-up"></i> Importar
            </a>
            <a class="btn btn-outline-secondary" asp-controller="Productos" asp-action="Exportar">
                <i class="bi bi-file-earmark-arrow-down"></i> Exportar
            </a>
        </div>
    </div>

    <form asp-action="Index" method="get" class="row g-3 mb-4 align-items-end">
        <div class="col-md-4">
            <label for="SearchString" class="form-label">Buscar por nombre:</label>
            <input type="text" name="SearchString" id="SearchString" class="form-control" value="@ViewData["CurrentFilter"]" />
        </div>
        <div class="col-md-2 d-grid">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Buscar
            </button>
        </div>
        <div class="col-md-2 d-grid">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-clockwise"></i> Limpiar
            </a>
        </div>
    </form>

    <div class="table-responsive shadow-sm">
        <table class="table table-striped table-hover table-bordered text-center align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Código</th>
                    <th>Nombre</th>
                    <th>Precio</th>
                    <th>Stock</th>
                    <th>Estado Stock</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var estado = item.Stock == 0 ? "Sin stock" :
                    item.Stock <= 10 ? "Bajo" : "Normal";
                    var claseFila = item.Stock == 0 ? "table-danger" :
                    item.Stock <= 10 ? "table-warning" : "";

                    <tr class="@claseFila">
                        <td>@item.CodigoBarra</td>
                        <td class="text-start">@item.Nombre</td>
                        <td>$@item.Precio.ToString("N2")</td>
                        <td>@item.Stock</td>
                        <td class="fw-bold">@estado</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1" title="Editar">
                                <i class="bi bi-pencil-square"></i> Editar
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Eliminar">
                                <i class="bi bi-trash"></i> Eliminar
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between mt-3">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-outline-dark @prevDisabled"
           aria-disabled="@(!Model.HasPreviousPage)">
            ⬅️ Anterior
        </a>

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-outline-dark @nextDisabled"
           aria-disabled="@(!Model.HasNextPage)">
            Siguiente ➡️
        </a>
    </div>
</div>
